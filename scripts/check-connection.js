// scripts/check-connection.js
// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB

import mongoose from 'mongoose';
import dotenv from 'dotenv';
import path from 'path';
import { fileURLToPath } from 'url';

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º __dirname –¥–ª—è ES –º–æ–¥—É–ª–µ–π
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config({ path: path.join(__dirname, '..', '.env') });

const checkConnection = async () => {
	try {
		console.log('üîç Checking MongoDB connection...\n');

		const mongoURI = process.env.MONGODB_URI || 'mongodb://localhost:27017/royalq-salebot';
		console.log(`üìç Connection URI: ${mongoURI}`);

		// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
		await mongoose.connect(mongoURI, {
			serverSelectionTimeoutMS: 5000, // 5 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
		});

		console.log('‚úÖ MongoDB connection successful!');
		console.log(`üìä Database: ${mongoose.connection.name}`);
		console.log(`üåê Host: ${mongoose.connection.host}`);
		console.log(`üîå Port: ${mongoose.connection.port}`);
		console.log(`‚ö° Ready State: ${mongoose.connection.readyState}`);

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏–∏
		const collections = await mongoose.connection.db.listCollections().toArray();
		console.log(`üìÅ Collections: ${collections.length}`);

		if (collections.length > 0) {
			console.log('üìã Available collections:');
			collections.forEach(col => {
				console.log(`  - ${col.name}`);
			});
		} else {
			console.log('üìã No collections found (database is empty)');
			console.log('üí° Run "npm run init-db" to populate with test data');
		}

		// –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
		await mongoose.connection.close();
		console.log('\n‚úÖ Connection test completed successfully!');

	} catch (error) {
		console.error('‚ùå MongoDB connection failed:');
		console.error(`   Error: ${error.message}`);

		if (error.message.includes('ECONNREFUSED')) {
			console.error('\nüí° Troubleshooting:');
			console.error('   1. Make sure MongoDB is running locally');
			console.error('   2. Check if MongoDB is listening on port 27017');
			console.error('   3. Try: brew services start mongodb/brew/mongodb-community (macOS)');
			console.error('   4. Try: sudo systemctl start mongodb (Ubuntu)');
		}

		process.exit(1);
	}
};

checkConnection();
