#!/bin/bash

# üõ°Ô∏è –¢–µ—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ API –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./scripts/test-server-security.sh [SERVER_URL]

SERVER_URL=${1:-"https://projects.inetskills.ru"}
API_KEY="06ediHycd1Vi1MY4l/DuV5FKrY5ocu8l0ru3Q1zXq5E="

echo "üõ°Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ API –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: $SERVER_URL"
echo "API Key: ${API_KEY:0:8}..."
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –°—á–µ—Ç—á–∏–∫–∏ —Ç–µ—Å—Ç–æ–≤
PASSED=0
FAILED=0
TOTAL=0

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
log_test() {
    local test_name="$1"
    local status="$2"
    local message="$3"
    
    TOTAL=$((TOTAL + 1))
    
    if [ "$status" = "PASS" ]; then
        echo -e "${GREEN}‚úÖ $test_name: PASS${NC} $message"
        PASSED=$((PASSED + 1))
    else
        echo -e "${RED}‚ùå $test_name: FAIL${NC} $message"
        FAILED=$((FAILED + 1))
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è HTTP –∑–∞–ø—Ä–æ—Å–∞
make_request() {
    local url="$1"
    local method="${2:-GET}"
    local headers="$3"
    local data="$4"
    
    if [ -n "$data" ]; then
        curl -s -w "%{http_code}" -X "$method" -H "$headers" -d "$data" "$url"
    else
        curl -s -w "%{http_code}" -X "$method" -H "$headers" "$url"
    fi
}

echo "üè• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health check..."
response=$(make_request "$SERVER_URL/health")
status_code="${response: -3}"
if [ "$status_code" = "200" ]; then
    log_test "Health check" "PASS" "–°—Ç–∞—Ç—É—Å: $status_code"
else
    log_test "Health check" "FAIL" "–û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 200, –ø–æ–ª—É—á–µ–Ω: $status_code"
fi

echo ""
echo "üåê –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞..."
response=$(make_request "$SERVER_URL/network")
status_code="${response: -3}"
if [ "$status_code" = "200" ]; then
    log_test "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω" "PASS" "–°—Ç–∞—Ç—É—Å: $status_code"
else
    log_test "–í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–µ–Ω" "FAIL" "–û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 200, –ø–æ–ª—É—á–µ–Ω: $status_code"
fi

echo ""
echo "üîí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ API..."
response=$(make_request "$SERVER_URL/api/referrals/tree")
status_code="${response: -3}"
if [ "$status_code" = "401" ]; then
    log_test "API –±–µ–∑ –∫–ª—é—á–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" "PASS" "–°—Ç–∞—Ç—É—Å: $status_code"
else
    log_test "API –±–µ–∑ –∫–ª—é—á–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" "FAIL" "–û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 401, –ø–æ–ª—É—á–µ–Ω: $status_code"
fi

echo ""
echo "üîë –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ API..."
response=$(make_request "$SERVER_URL/api/referrals/tree" "GET" "x-api-key: $API_KEY")
status_code="${response: -3}"
if [ "$status_code" = "200" ]; then
    log_test "API —Å –∫–ª—é—á–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç" "PASS" "–°—Ç–∞—Ç—É—Å: $status_code"
else
    log_test "API —Å –∫–ª—é—á–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç" "FAIL" "–°—Ç–∞—Ç—É—Å: $status_code"
fi

echo ""
echo "‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ API –∫–ª—é—á–∞..."
response=$(make_request "$SERVER_URL/api/referrals/tree" "GET" "x-api-key: wrong-key")
status_code="${response: -3}"
if [ "$status_code" = "401" ]; then
    log_test "–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" "PASS" "–°—Ç–∞—Ç—É—Å: $status_code"
else
    log_test "–ù–µ–≤–µ—Ä–Ω—ã–π API –∫–ª—é—á –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" "FAIL" "–û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 401, –ø–æ–ª—É—á–µ–Ω: $status_code"
fi

echo ""
echo "‚úèÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞–ø–∏—Å–∏ –±–µ–∑ –∫–ª—é—á–∞..."
response=$(make_request "$SERVER_URL/api/referals" "POST" "Content-Type: application/json" '{"referalId":"test123","referalName":"Test User"}')
status_code="${response: -3}"
if [ "$status_code" = "401" ]; then
    log_test "POST –±–µ–∑ –∫–ª—é—á–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" "PASS" "–°—Ç–∞—Ç—É—Å: $status_code"
else
    log_test "POST –±–µ–∑ –∫–ª—é—á–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω" "FAIL" "–û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 401, –ø–æ–ª—É—á–µ–Ω: $status_code"
fi

echo ""
echo "‚úèÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–π –∑–∞–ø–∏—Å–∏ —Å –∫–ª—é—á–æ–º..."
response=$(make_request "$SERVER_URL/api/referals" "POST" "x-api-key: $API_KEY" '{"referalId":"test456","referalName":"Test User 2"}')
status_code="${response: -3}"
if [ "$status_code" = "200" ] || [ "$status_code" = "201" ]; then
    log_test "POST —Å –∫–ª—é—á–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç" "PASS" "–°—Ç–∞—Ç—É—Å: $status_code"
else
    log_test "POST —Å –∫–ª—é—á–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç" "FAIL" "–°—Ç–∞—Ç—É—Å: $status_code"
fi

echo ""
echo "‚è±Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ rate limiting..."
echo "–û—Ç–ø—Ä–∞–≤–ª—è–µ–º 10 –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–¥—Ä—è–¥..."
rate_limited=0
for i in {1..10}; do
    response=$(make_request "$SERVER_URL/api/referrals/tree" "GET" "x-api-key: $API_KEY")
    status_code="${response: -3}"
    if [ "$status_code" = "429" ]; then
        rate_limited=1
        break
    fi
    sleep 0.1
done

if [ "$rate_limited" = "1" ]; then
    log_test "Rate limiting —Å—Ä–∞–±–æ—Ç–∞–ª" "PASS" "–ó–∞–ø—Ä–æ—Å—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã"
else
    log_test "Rate limiting —Å—Ä–∞–±–æ—Ç–∞–ª" "INFO" "–õ–∏–º–∏—Ç –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç (–Ω–æ—Ä–º–∞–ª—å–Ω–æ)"
fi

echo ""
echo "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:"
echo -e "${GREEN}‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: $PASSED${NC}"
echo -e "${RED}‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: $FAILED${NC}"
echo -e "${YELLOW}üìà –í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: $TOTAL${NC}"

success_rate=$((PASSED * 100 / TOTAL))
echo -e "${YELLOW}üéØ –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: $success_rate%${NC}"

if [ "$FAILED" -eq 0 ]; then
    echo ""
    echo -e "${GREEN}üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${GREEN}üõ°Ô∏è API –∑–∞—â–∏—â–µ–Ω –æ—Ç –Ω–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞!${NC}"
else
    echo ""
    echo -e "${RED}‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é API!${NC}"
    echo -e "${YELLOW}–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.${NC}"
fi

echo ""
echo "üîß –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞: docker-compose logs app"
echo "2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: docker-compose exec app env | grep API"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤: docker-compose ps"
